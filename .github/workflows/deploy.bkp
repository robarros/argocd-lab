name: Deploy Application

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'app/**'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  DOCKER_IMAGE: robarros/argocd-app
  DEPLOYMENT_FILE: k8s/hello-world-app/deployment.yaml

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.tag.outputs.short_sha }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.11'
      
      - name: Test application
        run: |
          cd app
          pip install -r requirements.txt
          python -c "import app; print('✅ App OK')"
      
      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,prefix=,format=short
            type=raw,value=latest
      
      - name: Generate short SHA
        id: tag
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "📦 Image tag: ${SHORT_SHA}"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      
      - name: Login to DockerHub
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
      
      - name: Build Summary
        run: |
          echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.short_sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ steps.tag.outputs.short_sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Build successful" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update Kubernetes deployment
        uses: mikefarah/yq@v4.48.1
        with:
          cmd: |
            yq eval '.spec.template.spec.containers[0].image = "${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.short_sha }}"' -i ${{ env.DEPLOYMENT_FILE }}
            echo "🔄 Updated image to: ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.short_sha }}"
            echo "📄 Deployment file updated:"
            yq eval '.spec.template.spec.containers[0].image' ${{ env.DEPLOYMENT_FILE }}
      
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: |
            🚀 Update image tag to ${{ needs.build.outputs.short_sha }}
            
            - Image: ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.short_sha }}
            - Commit: ${{ needs.build.outputs.short_sha }}
            - Triggered by: ${{ github.actor }}
          file_pattern: ${{ env.DEPLOYMENT_FILE }}
          commit_user_name: github-actions[bot]
          commit_user_email: github-actions[bot]@users.noreply.github.com
          commit_author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
      
      - name: Deployment Summary
        run: |
          echo "## 🎉 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.short_sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ needs.build.outputs.short_sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⏳ Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "ArgoCD will automatically sync the changes in ~3 minutes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Docker Image](https://hub.docker.com/r/${{ env.DOCKER_IMAGE }}/tags)" >> $GITHUB_STEP_SUMMARY
